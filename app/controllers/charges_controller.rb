class ChargesController < ApplicationController
	before_action :authenticate_user!
	def new
		@cart = current_user.cart
		@amount = @cart.total_cart_price 
	end

	def create
	  @cart = current_user.cart
	  # .to_i to avoid the bug generated by the decimal
	  @amount = @cart.total_cart_price.to_i

	  customer = Stripe::Customer.create({
	    email: params[:stripeEmail],
	    source: params[:stripeToken],
	  })

	  charge = Stripe::Charge.create({
	    customer: customer.id,
	    amount: @amount * 100,
	  	description: 'Rails Stripe customer',
	  	currency: 'eur',
	  })

	 # We stock the cart's items in a variable
		@cart_items = @cart.item_sizes

		# We create a new order
		@order = Order.create(stripe_customer_id: customer.id, user_id: current_user.id)

		# Each item of this card is put in the order item table (with the id of the current order)
		@cart_items.each do |item|
			OrderItem.create(order_id: @order.id, item_size_id: item.id)
		end


		# we empty the cart
		CartItem.where(cart_id: @cart.id).each do |entry|
			entry.destroy
		end

		redirect_to order_items_path(current_user.id)
		flash[:success] = "Votre commande a bien été prise en compte" 

	rescue Stripe::CardError => e
	  flash[:error] = e.message
	  redirect_to new_charge_path
	end
end
